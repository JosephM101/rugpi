set rugpi_bootpart=2
set rugpi_boot_spare=false

set RUGPI_SPARE_ENV=(${root})/rugpi/boot_spare.grubenv

function verify_and_load {
    env_file="${1}"
    sha1_file="${1}.sha1"
    echo "Loading environment from '${env_file}'..."
    hashsum --hash sha1 --check "${sha1_file}"
    if [ $? != 0 ]; then
        echo "Environment is corrupt!"
        return 1
    else
        load_env -f "${env_file}"
        return 0
    fi
}

# We just load both environments giving priority to the primary one.
verify_and_load "(${root})/rugpi/secondary.grubenv"
verify_and_load "(${root})/rugpi/primary.grubenv"

load_env -f "${RUGPI_SPARE_ENV}"

if [ "${rugpi_boot_spare}" = "true" ]; then
    echo "Booting to spare partition set..."

    if [ "${rugpi_bootpart}" = "2" ]; then
        set rugpi_bootpart=3
    elif [ "${rugpi_bootpart}" = "3" ]; then
        set rugpi_bootpart=2
    fi
    
    set rugpi_boot_spare=false
    save_env -f "${RUGPI_SPARE_ENV}" rugpi_boot_spare
    set rugpi_boot_spare=true
fi

if [ "${rugpi_bootpart}" = "2" ]; then
    set rugpi_syspart=4
elif [ "${rugpi_bootpart}" = "3" ]; then
    set rugpi_syspart=5
fi

regexp (.*),(.*) $root -s 1:rugpi_root_device
set root=(${rugpi_root_device},${rugpi_bootpart})

if [ -f (${root})/grub.cfg ]; then
    source (${root})/grub.cfg
fi

echo "Second stage boot script fell through..."
echo "Press ESC for a shell..."
sleep --verbose --interruptible 10
if [ $? = 0 ]; then
    echo "Rebooting..."
    reboot
fi
