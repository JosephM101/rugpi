import React from "react"
import clsx from "clsx"
import Link from "@docusaurus/Link"
import useDocusaurusContext from "@docusaurus/useDocusaurusContext"
import Layout from "@theme/Layout"
import HomepageFeatures from "@site/src/components/HomepageFeatures"
import Admonition from "@theme/Admonition"

import DebianLogo from "@site/static/img/logos/debian.svg"
import AlpineLinuxLogo from "@site/static/img/logos/alpine-linux.svg"

import styles from "./index.module.css"

const SupportedDistributions: React.FC<{}> = () => {
  return (
    <>
      <h3 className="text-center">Supported Distributions</h3>
      <p className="text-center">
        Rugpi supports building images based on{" "}
        <a href="https://www.debian.org/" target="_blank">
          Debian
        </a>
        ,{" "}
        <a href="https://alpinelinux.org/" target="_blank">
          Alpine Linux
        </a>
        , and{" "}
        <a href="https://www.raspberrypi.com/software/" target="_blank">
          Raspberry Pi OS
        </a>
        .
      </p>
      <div className="rounded-xl mb-4 mx-auto py-5 px-10 w-fit bg-gray-200">
        <div className="flex flex-wrap space-x-10 justify-center items-center">
          <a href="https://www.debian.org/" target="_blank" className="h-20">
            <DebianLogo className="h-full w-fit" />
          </a>
          <a
            href="https://alpinelinux.org/"
            target="_blank"
            className="flex items-center h-20"
          >
            <AlpineLinuxLogo viewBox="0 0 665 162" className="h-12" width="200" />
          </a>
          <a
            href="https://www.raspberrypi.com/"
            target="_blank"
            className="h-20"
          >
            <img
              src={require("@site/static/img/logos/raspios.png").default}
              className="h-full"
            />
          </a>
        </div>
      </div>
      <p className="text-center">
        It can also be used with root filesystems generated by other tools,
        e.g.,{" "}
        <a href="https://www.yoctoproject.org/" target="_blank">
          Yocto Project
        </a>{" "}
        or{" "}
        <a href="https://buildroot.org/" target="_blank">
          Buildroot
        </a>
        .
      </p>
    </>
  )
}

function HomepageHeader() {
  return (
    <header
      className={clsx("hero hero--primary", styles.heroBanner, styles.hero)}
    >
      <div className="container">
        <h1 className="hero__title">
          Robust Building Blocks for Linux-based Devices
        </h1>
        <p className="hero__subtitle">
          Rugpi is an open-source platform empowering you to build innovative
          devices around customized Linux distributions.
        </p>
        <p style={{ maxWidth: "80ch", margin: "1.5em auto" }}>
          Rugpi enables you to{" "}
          <strong>
            build commercial-grade, customized variants of popular Linux
            distributions{" "}
          </strong>
          for your devices. It boasts three core features designed to work
          seamlessly together: (1) A modern, flexible workflow to build
          customized system images, (2) robust{" "}
          <strong>over-the-air system updates with rollback support</strong> for
          the entire system, and (3) <strong>managed state</strong> that is
          preserved across reboots and updates.
        </p>
        <div className={styles.buttons}>
          <Link
            className="button button--secondary button--lg"
            to="/docs/getting-started"
          >
            Get Started ðŸš€
          </Link>
        </div>
      </div>
    </header>
  )
}

export default function Home(): JSX.Element {
  const { siteConfig } = useDocusaurusContext()
  return (
    <Layout title="Home" description={siteConfig.tagline}>
      <HomepageHeader />
      <main>
        <div style={{ maxWidth: "80ch", margin: "3rem auto" }}>
          <Admonition type="info" title="Stability Guarantees">
            <p>
              While Rugpi is a young and evolving project, we understand that
              device lifetimes typically span multiple years, if not decades. We
              are committed to maintain backwards-compatibility for updates.
              This ensures that devices using Rugpi can be updated in the
              future. If you're developing anything with Rugpi, please be aware
              that the building pipeline, CLI, and APIs may still change.
            </p>
          </Admonition>
        </div>
        <SupportedDistributions />
        <div className="flex flex-col items-center mt-12">
          <h3 className="text-center">Feature Highlights</h3>
          <ul className="list-none">
            <li>âœ… Supports <strong>any EFI-compatible system and all models of Raspberry Pi</strong>.</li>
            <li>âœ… Supports <strong>streaming of updates</strong> without intermediate storage.</li>
            <li>âœ… Enables <a href="docs/advanced/signed-updates">cryptographically <strong>signed and verified updates</strong></a>.</li>
            <li>âœ… Integrates well with <a href="docs/advanced/device-management">existing device management solutions</a>.</li>
            <li>âœ… Provides interfaces to built your own update workflow upon.</li>
            <li>âœ… Provides built-in state management inspired by Docker.</li>
          </ul>
        </div>
        <HomepageFeatures />
      </main>
    </Layout>
  )
}
